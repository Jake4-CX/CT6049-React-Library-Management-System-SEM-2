-- Create sequences for each table to handle primary keys
BEGIN
  EXECUTE IMMEDIATE 'CREATE SEQUENCE users_seq START WITH 1 INCREMENT BY 1';
  EXECUTE IMMEDIATE 'CREATE SEQUENCE books_seq START WITH 1 INCREMENT BY 1';
  EXECUTE IMMEDIATE 'CREATE SEQUENCE authors_seq START WITH 1 INCREMENT BY 1';
  EXECUTE IMMEDIATE 'CREATE SEQUENCE categories_seq START WITH 1 INCREMENT BY 1';
  EXECUTE IMMEDIATE 'CREATE SEQUENCE time_seq START WITH 1 INCREMENT BY 1';
  EXECUTE IMMEDIATE 'CREATE SEQUENCE loaned_books_seq START WITH 1 INCREMENT BY 1';
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM); -- display error (if any)
END;
/

-- Creating Dimension Tables

CREATE TABLE DIMTIME (
  DATEID INTEGER DEFAULT TIME_SEQ.NEXTVAL PRIMARY KEY,
  DATE_TIME TIMESTAMP,
  MINUTE INTEGER,
  HOUR INTEGER,
  DAYOFWEEK INTEGER,
  MONTH INTEGER,
  QUARTER INTEGER,
  YEAR INTEGER,
  ISWEEKEND CHAR(1)
);

CREATE TABLE DIMUSERS (
  USERID INTEGER DEFAULT USERS_SEQ.NEXTVAL PRIMARY KEY,
  USEREMAIL VARCHAR2(100),
  USERROLE VARCHAR2(50)
);

CREATE TABLE DIMAUTHORS (
  AUTHORID INTEGER DEFAULT AUTHORS_SEQ.NEXTVAL PRIMARY KEY,
  AUTHORNAME VARCHAR2(100)
);

CREATE TABLE DIMCATEGORIES (
  CATEGORYID INTEGER DEFAULT CATEGORIES_SEQ.NEXTVAL PRIMARY KEY,
  CATEGORYNAME VARCHAR2(100)
);

CREATE TABLE DIMBOOKS (
  BOOKID INTEGER DEFAULT BOOKS_SEQ.NEXTVAL PRIMARY KEY,
  BOOKNAME VARCHAR2(255),
  BOOKISBN VARCHAR2(50),
  BOOKQUANTITY INTEGER,
  BOOKPUBLICATIONTIMEID INTEGER,
  BOOKAUTHORID INTEGER,
  BOOKCATEGORYID INTEGER,
  CONSTRAINT FK_BOOK_PUBLICATION_TIME FOREIGN KEY (BOOKPUBLICATIONTIMEID) REFERENCES DIMTIME(DATEID),
  CONSTRAINT FK_BOOK_AUTHORS FOREIGN KEY (BOOKAUTHORID) REFERENCES DIMAUTHORS(AUTHORID),
  CONSTRAINT FK_BOOK_CATEGORIES FOREIGN KEY (BOOKCATEGORYID) REFERENCES DIMCATEGORIES(CATEGORYID)
);

-- factLoanedBook Table
CREATE TABLE FACTLOANEDBOOK (
  LOANEDBOOKSID INTEGER DEFAULT LOANED_BOOKS_SEQ.NEXTVAL PRIMARY KEY,
  USERID INTEGER,
  BOOKID INTEGER,
  LOANEDATTIMEID INTEGER,
  RETURNEDATTIMEID INTEGER,
  FINEAMOUNT DECIMAL(10, 2),
  CONSTRAINT FK_LOANED_BOOK_USER FOREIGN KEY (USERID) REFERENCES DIMUSERS(USERID),
  CONSTRAINT FK_LOANED_BOOK_BOOK FOREIGN KEY (BOOKID) REFERENCES DIMBOOKS(BOOKID),
  CONSTRAINT FK_LOANED_BOOK_LOANED_AT_TIME FOREIGN KEY (LOANEDATTIMEID) REFERENCES DIMTIME(DATEID),
  CONSTRAINT FK_LOANED_BOOK_RETURNED_AT_TIME FOREIGN KEY (RETURNEDATTIMEID) REFERENCES DIMTIME(DATEID)
);

-- Create indexes to improve join performance
CREATE INDEX IDX_FACTLOANEDBOOK_USERID ON FACTLOANEDBOOK(USERID);

CREATE INDEX IDX_FACTLOANEDBOOK_BOOKID ON FACTLOANEDBOOK(BOOKID);

CREATE INDEX IDX_FACTLOANEDBOOK_LOANEDATTIMEID ON FACTLOANEDBOOK(LOANEDATTIMEID);

CREATE INDEX IDX_FACTLOANEDBOOK_RETURNEDATTIMEID ON FACTLOANEDBOOK(RETURNEDATTIMEID);

-- Drop Tables
/*
DROP TABLE FACTLOANEDBOOK;
DROP TABLE DIMBOOKS;
DROP TABLE DIMUSERS;
DROP TABLE DIMAUTHORS;
DROP TABLE DIMCATEGORIES;
DROP TABLE DIMTIME;

-- Drop Sequences
DROP SEQUENCE loaned_books_seq;
DROP SEQUENCE books_seq;
DROP SEQUENCE users_seq;
DROP SEQUENCE authors_seq;
DROP SEQUENCE categories_seq;
DROP SEQUENCE time_seq;
*/